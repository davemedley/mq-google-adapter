*******************************************************************************
* Script generated on 2020-10-20   at 19.37.08 
* Script generated by user 'mqm' on host 'dave-UX360UA' 
* Queue manager name: QM1 
* Queue manager platform: UNIX 
* Queue manager command level: (915/915) XRCAP(YES) AMQPCAP(YES) 
* Command issued: /opt/mqm/bin/dmpmqcfg -m QM1 -o mqsc  
*******************************************************************************
ALTER QMGR +
*  ADVCAP(ENABLED) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
*  AMQPCAP(YES) +
   CCSID(1208) +
   CERTLABL('ibmwebspheremqqm1') +
   CLWLUSEQ(LOCAL) +
*  COMMANDQ(SYSTEM.ADMIN.COMMAND.QUEUE) +
   CONNAUTH('DEV.AUTHINFO') +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.24) +
   DEADQ('DEV.DEAD.LETTER.QUEUE') +
*  QMID(QM1_2020-10-12_13.39.24) +
*  SPLCAP(ENABLED) +
   SSLCRYP(' ') +
   SSLKEYR('/var/mqm/qmgrs/QM1/ssl/key') +
   SUITEB(NONE) +
*  VERSION(09010500) +
*  XRCAP(YES) +
   FORCE
DEFINE QLOCAL('DEV.DEAD.LETTER.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.1') +
*  ALTDATE(2020-10-14) +
*  ALTTIME(08.42.33) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.2') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.28) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('DEV.QUEUE.3') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.28) +
*  CURDEPTH(261) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Administration Accounting Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Administration Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CHANNEL.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Command Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.COMMAND.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
*  OPPROCS(2) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.CONFIG.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Configuration Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.LOGGER.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Logger Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PERFM.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Performance Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(9000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.PUBSUB.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Publish/Subscribe Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.QMGR.EVENT') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
*  CURDEPTH(1) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Queue Manager Related Event Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Administration Statistics Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   ACCTQ(OFF) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Administration Trace Activity Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   STATQ(OFF) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Administration Trace Route Queue') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AMQP.COMMAND.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.27) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Administration Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.AUTH.DATA.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
*  CURDEPTH(110) +
   DESCR('IBM MQ Authority Data Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.ADMIN.STREAM') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('Admin stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.CONTROL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('Control queue for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(3) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.DEFAULT.STREAM') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('Default stream for queued Pub/Sub interface') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(5000) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.27) +
   DEFPSIST(YES) +
   DESCR('MQSeries Publish/Subscribe internal reply queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.INITQ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Channel Initiation Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(1000) +
   MAXMSGL(2000) +
   NOSHARE +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHANNEL.SYNCQ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Channel Sync Queue') +
   DISTL(NO) +
   MAXDEPTH(20000) +
   MAXMSGL(20000) +
   QDEPTHLO(40) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CHLAUTH.DATA.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
*  CURDEPTH(5) +
   DESCR('IBM MQ Channel Authentication Data Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CICS.INITIATION.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DESCR('IBM MQ Default CICS Initiation queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.COMMAND.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DESCR('IBM MQ Cluster Command Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.HISTORY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Cluster History Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
*  CURDEPTH(2) +
   DESCR('IBM MQ Cluster Repository Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QMODEL('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFTYPE(PERMDYN) +
   DESCR('IBM MQ Cluster Transmission Model Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DESCR('IBM MQ Cluster Transmission Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   USAGE(XMITQ) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DDELAY.LOCAL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.27) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Delivery Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEAD.LETTER.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DESCR('IBM MQ Default Dead Letter Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QALIAS('SYSTEM.DEFAULT.ALIAS.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.INITIATION.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DESCR('IBM MQ Default Initiation Queue') +
   DISTL(NO) +
   MAXDEPTH(1000) +
   MAXMSGL(1000) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QLOCAL('SYSTEM.DEFAULT.LOCAL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.DEFAULT.MODEL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QREMOTE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   XMITQ(' ') +
   REPLACE
DEFINE QLOCAL('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('IBM MQ .NET XA Recovery Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QMODEL('SYSTEM.DURABLE.MODEL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFTYPE(PERMDYN) +
   DESCR('Model for managed queues for durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
*  CURDEPTH(1) +
   DESCR('Store of information about durable subscribers') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.HIERARCHY.STATE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
*  CURDEPTH(2) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub hierarchy relationship') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.CONTROL') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Control Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.FANREQ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
*  CURDEPTH(1) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub proxy-sub request queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
*  OPPROCS(1) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTER.QMGR.PUBS') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('MQ Publish/Subscribe Distributed Pub/sub Publications') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REPLY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Internal Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QLOCAL('SYSTEM.INTERNAL.REQUEST.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Internal Request Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(32762) +
   REPLACE
DEFINE QMODEL('SYSTEM.JMS.TEMPQ.MODEL') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for JMS temporary queues') +
   DISTL(NO) +
   MAXDEPTH(5000) +
   MAXMSGL(104857600) +
   SHARE +
   REPLACE
DEFINE QMODEL('SYSTEM.MQEXPLORER.REPLY.MODEL') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFREADA(YES) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DISTL(NO) +
   MAXDEPTH(5000) +
   REPLACE
DEFINE QMODEL('SYSTEM.MQSC.REPLY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DEFTYPE(TEMPDYN) +
   DESCR('IBM MQ MQSC Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(3000) +
   MAXMSGL(32762) +
   TRIGTYPE(NONE) +
   REPLACE
DEFINE QMODEL('SYSTEM.NDURABLE.MODEL.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFREADA(YES) +
   DEFTYPE(TEMPDYN) +
   DESCR('Model for managed queues for non durable subscriptions') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   SHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PENDING.DATA.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.25) +
   DEFSOPT(EXCL) +
   DESCR('IBM MQ Deferred Message Queue') +
   DISTL(NO) +
*  IPPROCS(1) +
   MAXDEPTH(999999999) +
   MSGDLVSQ(FIFO) +
*  OPPROCS(1) +
   QDPMAXEV(DISABLED) +
   NOSHARE +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.ERROR.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Error Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.PROTECTION.POLICY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DEFPSIST(YES) +
   DESCR('IBM MQ Message Protection Policy Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE QLOCAL('SYSTEM.REST.REPLY.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.27) +
   DESCR('IBM MQ REST Reply Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   QDPMAXEV(DISABLED) +
   REPLACE
DEFINE QLOCAL('SYSTEM.RETAINED.PUB.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
*  CURDEPTH(26) +
   DESCR('Store of retained publications') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   MSGDLVSQ(FIFO) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.EVALUATION.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Selection Evaluation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   MAXMSGL(104857600) +
   REPLACE
DEFINE QLOCAL('SYSTEM.SELECTION.VALIDATION.QUEUE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
*  CRDATE(2020-10-12) +
*  CRTIME(13.39.26) +
   DESCR('IBM MQ Selection Validation Queue') +
   DISTL(NO) +
   MAXDEPTH(999999999) +
   REPLACE
DEFINE NAMELIST('SYSTEM.DEFAULT.NAMELIST') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
*  NAMCOUNT(2) +
   NAMES('SYSTEM.BROKER.DEFAULT.STREAM' +
        ,'SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('A list of queues for the queued Pub/Sub interface to monitor') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   REPLACE
DEFINE NAMELIST('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
*  NAMCOUNT(1) +
   NAMES('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   DESCR('Topic objects list used to match to RFH2 subscription points') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   REPLACE
DEFINE PROCESS('SYSTEM.DEFAULT.PROCESS') +
   APPLTYPE(UNIX) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   REPLACE
DEFINE CHANNEL('DEV.ADMIN.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('DEV.APP.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   MCAUSER('app') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.AUTO.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   DESCR('Auto-defined by') +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.AMQP') +
   CHLTYPE(AMQP) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   PORT(5672) +
   TPROOT('SYSTEM.BASE.TOPIC') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSRCVR') +
   CHLTYPE(CLUSRCVR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLUSSDR') +
   CHLTYPE(CLUSSDR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   MCATYPE(THREAD) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.RECEIVER') +
   CHLTYPE(RCVR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.REQUESTER') +
   CHLTYPE(RQSTR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SENDER') +
   CHLTYPE(SDR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SERVER') +
   CHLTYPE(SVR) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   TRPTYPE(TCP) +
   XMITQ(' ') +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.SVRCONN') +
   CHLTYPE(SVRCONN) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(17.28.21) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE CHANNEL('SYSTEM.DEF.CLNTCONN') +
   CHLTYPE(CLNTCONN) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   TRPTYPE(TCP) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   AUTHTYPE(CRLLDAP) +
   CONNAME(' ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   AUTHTYPE(IDPWLDAP) +
   ADOPTCTX(YES) +
   CONNAME(' ') +
   CHCKCLNT(REQUIRED) +
   SHORTUSR(' ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(REQDADM) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   REPLACE
DEFINE AUTHINFO('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   AUTHTYPE(OCSP) +
   OCSPURL(' ') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   REPLACE
DEFINE AUTHINFO('DEV.AUTHINFO') +
   AUTHTYPE(IDPWOS) +
   ADOPTCTX(YES) +
   CHCKCLNT(REQDADM) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   REPLACE
DEFINE LISTENER('DEV.LISTENER.TCP') +
   TRPTYPE(TCP) +
   CONTROL(QMGR) +
   PORT(1414) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   REPLACE
DEFINE LISTENER('SYSTEM.DEFAULT.LISTENER.TCP') +
   TRPTYPE(TCP) +
   CONTROL(MANUAL) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.25) +
   REPLACE
DEFINE SERVICE('SYSTEM.AMQP.SERVICE') +
   CONTROL(QMGR) +
   SERVTYPE(SERVER) +
   STARTCMD('+MQ_INSTALL_PATH+/bin/amqp.sh') +
   STARTARG('start -m +QMNAME+ -d "+MQ_Q_MGR_DATA_PATH+/." -g "+MQ_DATA_PATH+/."') +
   STOPCMD('+MQ_INSTALL_PATH+/bin/endmqsde') +
   STOPARG('-m +QMNAME+ -n "+MQ_SERVICE_NAME+" -t AMQP') +
   STDOUT('+MQ_Q_MGR_DATA_PATH+/amqp.stdout') +
   STDERR('+MQ_Q_MGR_DATA_PATH+/amqp.stderr') +
   DESCR('Manages clients that use the AMQP protocol') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   REPLACE
DEFINE SERVICE('SYSTEM.DEFAULT.SERVICE') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   REPLACE
DEFINE COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   GRPADDR('239.0.0.0') +
   PORT(1414) +
   REPLACE
DEFINE TOPIC('DEV.BASE.TOPIC') +
   TOPICSTR('dev/') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   REPLACE
DEFINE TOPIC('DEV.OUT.TOPIC') +
   TOPICSTR('dev/topic') +
*  ALTDATE(2020-10-15) +
*  ALTTIME(20.40.11) +
   REPLACE
DEFINE TOPIC('SYSTEM.ADMIN.TOPIC') +
   TOPICSTR('$SYS/MQ') +
   DESCR('Root topic for MQ administrative topics') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(QMGR) +
   SUBSCOPE(QMGR) +
   WILDCARD(BLOCK) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BASE.TOPIC') +
   TOPICSTR('') +
   DESCR('Base topic for resolving attributes') +
   DURSUB(YES) +
   PUB(ENABLED) +
   SUB(ENABLED) +
   DEFPSIST(NO) +
   DEFPRTY(0) +
   DEFPRESP(SYNC) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   PMSGDLV(ALLDUR) +
   NPMSGDLV(ALLAVAIL) +
   PUBSCOPE(ALL) +
   SUBSCOPE(ALL) +
   MDURMDL('SYSTEM.DURABLE.MODEL.QUEUE') +
   MNDURMDL('SYSTEM.NDURABLE.MODEL.QUEUE') +
   MCAST(DISABLED) +
   COMMINFO('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   USEDLQ(YES) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.ADMIN.STREAM') +
   TOPICSTR('SYSTEM.BROKER.ADMIN.STREAM') +
   DESCR('Admin stream for queued Pub/Sub interface') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.STREAM') +
   TOPICSTR('') +
   DESCR('Default stream for queued Pub/Sub interface') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   TOPICSTR('') +
   DESCR('Default RFH2 subscription point for queued Pub/Sub interface') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   WILDCARD(BLOCK) +
   MCAST(DISABLED) +
   REPLACE
DEFINE TOPIC('SYSTEM.DEFAULT.TOPIC') +
   TOPICSTR('') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.26) +
   REPLACE
DEFINE SUB('default') +
   TOPICSTR('') +
   TOPICOBJ('DEV.BASE.TOPIC') +
*  DISTYPE(DEFINED) +
   DEST('DEV.QUEUE.3') +
   PUBACCT(0431303030000000000000000000000000000000000000000000000000000006) +
   DESTCORL(414D5120514D31202020202020202020D2A3845F350EA123) +
*  SUBTYPE(ADMIN) +
   SUBUSER('dave') +
*  CRDATE(2020-10-13) +
*  CRTIME(14:54:07) +
*  ALTDATE(2020-10-13) +
*  ALTTIME(14:54:07) +
   REPLACE
DEFINE SUB('SYSTEM.DEFAULT.SUB') +
   TOPICSTR('') +
*  DISTYPE(DEFINED) +
*  SUBTYPE(ADMIN) +
*  CRDATE(2020-10-12) +
*  CRTIME(13:39:26) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13:39:26) +
   REPLACE
DEFINE SUB('out') +
   TOPICSTR('') +
   TOPICOBJ('DEV.OUT.TOPIC') +
*  DISTYPE(DEFINED) +
   PUBACCT(0431303030000000000000000000000000000000000000000000000000000006) +
   DESTCLAS(MANAGED) +
   SUBSCOPE(QMGR) +
*  SUBTYPE(ADMIN) +
   SUBUSER('dave') +
*  CRDATE(2020-10-15) +
*  CRTIME(20:44:30) +
*  ALTDATE(2020-10-15) +
*  ALTTIME(20:44:30) +
   REPLACE
SET CHLAUTH('DEV.ADMIN.SVRCONN') +
   TYPE(USERMAP) +
   DESCR('Allows admin user to connect via ADMIN channel') +
   CLNTUSER('admin') +
   USERSRC(CHANNEL) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.ADMIN.SVRCONN') +
   TYPE(USERMAP) +
   ADDRESS('*') +
   CLNTUSER('dave') +
   MCAUSER('dave') +
   USERSRC(MAP) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(17.32.12) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.ADMIN.SVRCONN') +
   TYPE(BLOCKUSER) +
   DESCR('Allows admins on ADMIN channel') +
   USERLIST('nobody') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   ACTION(REPLACE)
SET CHLAUTH('DEV.APP.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Allows connection via APP channel') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
   CHCKCLNT(REQUIRED) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.ADMIN.SVRCONN') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to allow MQ Explorer access') +
   ADDRESS('*') +
   USERSRC(CHANNEL) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   ACTION(REPLACE)
SET CHLAUTH('SYSTEM.*') +
   TYPE(ADDRESSMAP) +
   DESCR('Default rule to disable all SYSTEM channels') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(ADDRESSMAP) +
   DESCR('Back-stop rule - Blocks everyone') +
   ADDRESS('*') +
   USERSRC(NOACCESS) +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.28) +
   ACTION(REPLACE)
SET CHLAUTH('*') +
   TYPE(BLOCKUSER) +
   DESCR('Default rule to disallow privileged users') +
   USERLIST('*MQADMIN') +
*  ALTDATE(2020-10-12) +
*  ALTTIME(13.39.27) +
   ACTION(REPLACE)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.INTER.BROKER.COMMUNICATIONS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.LISTENER.TCP') +
   GROUP('dave') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('DEV.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSRCVR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQSC.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.ADMIN.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.QMGR.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.POLICY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SERVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.CRLLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.RETAINED.PUB.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ROUTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.CONTROL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TOPIC') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.SUBSCRIBER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.FANREQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('dave') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.PROCESS') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CHG,DLT,DSP,INQ,SET)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.HIERARCHY.STATE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('DEV.ADMIN.SVRCONN') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('DEV.ADMIN.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.CONTROL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('dave') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('dave') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.SUBPOINT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('dave') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.QPUBSUB.QUEUE.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('DEV.BASE.TOPIC') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('DEV.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.TRACE.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PUBSUB.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.STREAM') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SENDER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CICS.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.NDURABLE.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.INITQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.2') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.2') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('dave') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.NAMELIST') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.INITIATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.REST.REPLY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.REST.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REQUEST.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.REPOSITORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWOS') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.AMQP') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.AMQP') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.LOGGER.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACCOUNTING.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PENDING.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.IDPWLDAP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.MANAGED.DURABLE.5F883EF02394DEA9') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MANAGED.DURABLE.5F883EF02394DEA9') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.REQUESTER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.RECEIVER') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.MQEXPLORER.REPLY.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DDELAY.LOCAL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('dave') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.COMMINFO.MULTICAST') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('self') +
   GROUP('dave') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(ALTUSR,CHG,CONNECT,DLT,DSP,INQ,SET,SETALL,SETID,CTRL,SYSTEM)
SET AUTHREC +
   PROFILE('self') +
   GROUP('mqclient') +
   OBJTYPE(QMGR) +
   AUTHADD(CONNECT,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.COMMAND.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.VALIDATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHLAUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.DEAD.LETTER.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.DEAD.LETTER.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTER.QMGR.PUBS') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BROKER.DEFAULT.SUBPOINT') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.SERVICE') +
   GROUP('dave') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.SERVICE') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(RQMNAME) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.ACTIVITY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DOTNET.XARECOVERY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqclient') +
   OBJTYPE(QUEUE) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(NAMELIST) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CHANNEL.SYNCQ') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(PROCESS) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(QMGR) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqclient') +
   OBJTYPE(QMGR) +
   AUTHADD(NONE)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.STATISTICS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.PROTECTION.ERROR.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(COMMINFO) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('dave') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLNTCONN') +
   GROUP('mqm') +
   OBJTYPE(CLNTCONN) +
   AUTHADD(CHG,DLT,DSP)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEF.CLUSSDR') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.REMOTE.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('dave') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('@class') +
   GROUP('mqm') +
   OBJTYPE(SERVICE) +
   AUTHADD(CRT)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.ALIAS.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTO.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('SYSTEM.AUTH.DATA.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.APP.SVRCONN') +
   GROUP('dave') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('DEV.APP.SVRCONN') +
   GROUP('mqm') +
   OBJTYPE(CHANNEL) +
   AUTHADD(CHG,DLT,DSP,CTRL,CTRLX)
SET AUTHREC +
   PROFILE('DEV.QUEUE.1') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.1') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.AUTHINFO.OCSP') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.SELECTION.EVALUATION.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.HISTORY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.JMS.TEMPQ.MODEL') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CONFIG.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.OUT.TOPIC') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('DEV.OUT.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.INTERNAL.REPLY.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('dave') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('SYSTEM.BASE.TOPIC') +
   GROUP('mqm') +
   OBJTYPE(TOPIC) +
   AUTHADD(CHG,CLR,DLT,DSP,PASSALL,PASSID,SETALL,SETID,CTRL,PUB,SUB,RESUME)
SET AUTHREC +
   PROFILE('DEV.QUEUE.3') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.QUEUE.3') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.PERFM.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('dave') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.DEFAULT.LISTENER.TCP') +
   GROUP('mqm') +
   OBJTYPE(LISTENER) +
   AUTHADD(CHG,DLT,DSP,CTRL)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.CLUSTER.TRANSMIT.MODEL.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.COMMAND.QUEUE') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.AMQP.COMMAND.QUEUE') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.AUTHINFO') +
   GROUP('dave') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('DEV.AUTHINFO') +
   GROUP('mqm') +
   OBJTYPE(AUTHINFO) +
   AUTHADD(CHG,DLT,DSP,INQ)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('dave') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('SYSTEM.ADMIN.CHANNEL.EVENT') +
   GROUP('mqm') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,CHG,CLR,DLT,DSP,GET,INQ,PUT,PASSALL,PASSID,SET,SETALL,SETID)
SET AUTHREC +
   PROFILE('DEV.**') +
   GROUP('mqclient') +
   OBJTYPE(QUEUE) +
   AUTHADD(BROWSE,GET,INQ,PUT)
*******************************************************************************
* Script ended on 2020-10-20   at 19.37.08 
* Number of Inquiry commands issued: 15 
* Number of Inquiry commands completed: 15 
* Number of Inquiry responses processed: 330 
* QueueManager count: 1 
* Queue count: 62 
* NameList count: 3 
* Process count: 1 
* Channel count: 13 
* AuthInfo count: 5 
* Listener count: 2 
* Service count: 2 
* CommInfo count: 1 
* Topic count: 8 
* Subscription count: 3 
* ChlAuthRec count: 8 
* AuthRec count: 218 
* Number of objects/records: 327 
*******************************************************************************
